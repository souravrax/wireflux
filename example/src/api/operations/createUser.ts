// Auto-generated file for createUser
// Do not edit this file manually

import { z } from 'zod';
import { fetchClient } from './src/api/fetchClient';

export const CreateUserRequestBodySchema = z.object({
  name: z.string(),
  email: z.string(),
});

export const CreateUserResponse201Schema = z.object({
  id: z.number().optional(),
  name: z.string().optional(),
  email: z.string().optional(),
});

export type CreateUserRequestBody = z.infer<typeof CreateUserRequestBodySchema>;

export type CreateUserResponse201 = z.infer<typeof CreateUserResponse201Schema>;

/**
 * Create a new user
 *
 * @param params - Request parameters
 * @param params.throwOnError - If true, throws ApiError instead of returning it as value
 * @returns Promise<Result<CreateUserResponse201>> - Result with data or error
 */
export async function createUser(params: {
  body: CreateUserRequestBody;
  throwOnError?: boolean;
  fetchConfig?: RequestInit;
}) {
  const { body, throwOnError, fetchConfig } = params;

  const url = '/users';
  const finalUrl = url;

  const options: RequestInit = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      ...fetchConfig?.headers,
    },
    ...fetchConfig,
    body: JSON.stringify(body),
  };

  const result = await fetchClient<CreateUserResponse201>(finalUrl, options, throwOnError);

  return {
    data: result.data,
    error: null,
  };
}
